{"version":3,"file":"index.js","sources":["../src/js/config.js","../src/js/maps_init.js","../src/js/refs.js","../src/js/utils.js","../src/js/localStorage.js","../src/js/resizer.js","../src/main.js","../src/js/marker.js","../src/js/routes.js","../src/js/handlers.js","../src/img/emoji-people.svg","../src/js/maps.js"],"sourcesContent":["export const config = {\n  GM_API_KEY: import.meta.env.VITE_GOOGLE_MAP_API_KEY,\n};\n","import { config } from './config';\n\n(g => {\n  var h,\n    a,\n    k,\n    p = 'The Google Maps JavaScript API',\n    c = 'google',\n    l = 'importLibrary',\n    q = '__ib__',\n    m = document,\n    b = window;\n  b = b[c] || (b[c] = {});\n  var d = b.maps || (b.maps = {}),\n    r = new Set(),\n    e = new URLSearchParams(),\n    u = () =>\n      h ||\n      (h = new Promise(async (f, n) => {\n        await (a = m.createElement('script'));\n        e.set('libraries', [...r] + '');\n        for (k in g)\n          e.set(\n            k.replace(/[A-Z]/g, t => '_' + t[0].toLowerCase()),\n            g[k]\n          );\n        e.set('callback', c + '.maps.' + q);\n        a.src = `https://maps.${c}apis.com/maps/api/js?` + e;\n        d[q] = f;\n        a.onerror = () => (h = n(Error(p + ' could not load.')));\n        a.nonce = m.querySelector('script[nonce]')?.nonce || '';\n        m.head.append(a);\n      }));\n  d[l]\n    ? console.warn(p + ' only loads once. Ignoring:', g)\n    : (d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)));\n})({\n  key: config.GM_API_KEY,\n  v: 'weekly',\n});\n","export const refs = {\n  mapArea: document.getElementById('map'),\n  resizer: document.querySelector('.resizer'),\n  randomBtn: document.getElementById('btn-random-place'),\n  findMeBtn: document.getElementById('btn-my-coordinate'),\n  addMarkerBtn: document.getElementById('btn-add-marker'),\n};\n","export function convertS(s) {\n  const minute = 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(s / day);\n  const hours = Math.floor((s % day) / hour);\n  const minutes = Math.floor((s % hour) / minute);\n  const seconds = s % minute;\n\n  return { days, hours, minutes, seconds };\n}\n\nexport function getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function dataToJSON(data) {\n  return JSON.stringify(data);\n}\n\nexport function jsonToData(jsonData) {\n  try {\n    return JSON.parse(jsonData);\n  } catch (error) {\n    console.log('Parse error :', error);\n  }\n}\n","import { jsonToData, dataToJSON } from './utils';\n\nexport function saveToLS(key, data) {\n  localStorage.setItem(key, dataToJSON(data));\n}\n\nexport function removeFromLS(key) {\n  localStorage.removeItem(key);\n}\n\nexport function getDataFromLS(key) {\n  return jsonToData(localStorage.getItem(key));\n}\n","import { refs } from './refs';\n\n// const refs.resizer = document.querySelector('.resizer');\nconst leftColumn = refs.resizer.previousElementSibling;\n\nlet isResizing = false;\n\nrefs.resizer.addEventListener('mousedown', event => {\n  isResizing = true;\n  document.addEventListener('mousemove', onMouseMove);\n  document.addEventListener('mouseup', onMouseUp);\n});\n\nfunction onMouseMove(event) {\n  if (!isResizing) return;\n\n  let newLeftWidth = event.clientX - leftColumn.getBoundingClientRect().left;\n  leftColumn.style.width = `${newLeftWidth}px`;\n}\n\nfunction onMouseUp() {\n  isResizing = false;\n  document.removeEventListener('mousemove', onMouseMove);\n  document.removeEventListener('mouseup', onMouseUp);\n}\n","import { getCurrentLocation, initMap } from './js/maps';\nimport './js/resizer.js';\nimport { refs } from './js/refs';\nimport {\n  handleClickFindMeBtn,\n  handleClickOnMap,\n  handleClickRandomBtn,\n  handleMarkerDragend,\n} from './js/handlers.js';\nimport { initMarker, initSavedMarkers, userMarkers } from './js/marker.js';\n// import { initInfoWindow } from './js/infoWindow.js';\n\nexport let obj = {};\n\nlet isAppInitialized = false;\n\nasync function initApp() {\n  if (isAppInitialized) return;\n  isAppInitialized = true;\n\n  console.trace('Init App');\n  const { map, marker, infoWindow } = await initMap(await getCurrentLocation());\n  obj = { map, marker, infoWindow };\n\n  // initSavedMarkers();\n\n  refs.randomBtn.addEventListener('click', handleClickRandomBtn);\n\n  refs.findMeBtn.addEventListener('click', handleClickFindMeBtn);\n\n  // refs.addMarkerBtn.addEventListener('click', async () => {\n  //   initMarker(await getCurrentLocation(), true, 'Added marker');\n  // });\n\n  // map.addListener('click', event => {\n  //   handleClickOnMap(event, userMarkers);\n  // });\n}\n\ninitApp();\n","// import { userMarkers } from '../main';\nimport { handleMarkerDragend } from './handlers';\nimport { getDataFromLS } from './localStorage';\nimport { obj } from '../main';\n\nexport let userMarkers = [];\n\nexport async function initMarker(\n  position,\n  draggable,\n  title,\n  markerImage = undefined\n) {\n  const { AdvancedMarkerElement, PinElement } = await google.maps.importLibrary(\n    'marker'\n  );\n\n  let glyphSvgPinElement;\n  if (markerImage) {\n    const glyphImg = document.createElement('img');\n    glyphImg.src = markerImage;\n\n    glyphSvgPinElement = new PinElement({\n      glyph: glyphImg,\n    });\n  }\n\n  const marker = new AdvancedMarkerElement({\n    map: obj.map,\n    position: position,\n    gmpDraggable: draggable,\n    gmpClickable: true,\n    content: glyphSvgPinElement?.element,\n    title: title,\n  });\n\n  marker.addListener('dragstart', () => {\n    obj.infoWindow.close();\n  });\n\n  marker.addListener('dragend', () => handleMarkerDragend(marker));\n\n  marker.addListener('gmp-click', () => handleMarkerDragend(marker));\n\n  console.log('Init Marker');\n\n  return marker;\n}\n\nexport function markerUpdate(marker, position) {\n  marker.position = position;\n}\n\nexport function redrawMarkerWindow(marker, markup) {\n  obj.infoWindow.close();\n  obj.infoWindow.setContent(markup);\n  obj.infoWindow.open(marker.map, marker);\n}\n\nexport function initSavedMarkers() {\n  const savedMarkers = getDataFromLS('user-markers');\n  if (!savedMarkers || savedMarkers.length === 0) return; // Avoid unnecessary processing\n\n  userMarkers = savedMarkers;\n  userMarkers.forEach(markerData => {\n    initMarker(markerData, false, 'User saved marker');\n  });\n  console.log('Init SavedMarkers');\n}\n","import axios from 'axios';\nimport { config } from './config';\nimport { obj } from '../main';\n\nexport async function getRoutes(origin, destination) {\n  const url = 'https://routes.googleapis.com/directions/v2:computeRoutes';\n\n  const requestData = {\n    origin: {\n      location: {\n        latLng: {\n          latitude: origin.lat,\n          longitude: origin.lng,\n        },\n      },\n    },\n    destination: {\n      location: {\n        latLng: {\n          latitude: destination.lat,\n          longitude: destination.lng,\n        },\n      },\n    },\n    travelMode: 'WALK',\n    //routingPreference: 'TRAFFIC_UNAWARE',\n    computeAlternativeRoutes: false,\n    routeModifiers: {\n      avoidTolls: false,\n      avoidHighways: false,\n      avoidFerries: false,\n    },\n    languageCode: 'en-US',\n    units: 'IMPERIAL',\n  };\n\n  const headers = {\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Goog-Api-Key': config.GM_API_KEY,\n      'X-Goog-FieldMask':\n        'routes.duration,routes.distanceMeters,routes.polyline.encodedPolyline',\n    },\n  };\n\n  try {\n    const response = await axios.post(url, requestData, headers);\n    return response.data;\n  } catch (error) {\n    console.error(\n      'Помилка отримання маршруту:',\n      error.response?.data || error.message\n    );\n    throw error;\n  }\n}\n\nexport async function drawRoute(encodedPolyline) {\n  const { geometry } = await google.maps.importLibrary('geometry');\n\n  const path = google.maps.geometry.encoding.decodePath(encodedPolyline);\n\n  const routePath = new google.maps.Polyline({\n    path: path,\n    geodesic: true,\n    strokeColor: '#FF0000',\n    strokeOpacity: 1.0,\n    strokeWeight: 4,\n  });\n\n  routePath.setMap(obj.map);\n}\n","import { saveToLS } from './localStorage';\nimport { getCurrentLocation, getMyGeolocation, getRandomPlace } from './maps';\nimport { initMarker, markerUpdate, redrawMarkerWindow } from './marker';\nimport { drawRoute, getRoutes } from './routes';\nimport { convertS } from './utils';\n\nimport { obj } from '../main';\n\nexport function handleClickRandomBtn() {\n  const newPosition = getRandomPlace();\n  obj.map.setCenter(newPosition);\n  // initMarker(position, false, 'Random marker');\n  markerUpdate(obj.marker, newPosition);\n}\n\nexport async function handleClickFindMeBtn() {\n  await getMyGeolocation();\n  obj.map.setZoom(15);\n}\n\nexport function handleLocationError(browserHasGeolocation, pos) {\n  obj.infoWindow.setPosition(pos);\n  obj.infoWindow.setContent(\n    browserHasGeolocation\n      ? 'Error: The Geolocation service failed.'\n      : \"Error: Your browser doesn't support geolocation.\"\n  );\n  obj.infoWindow.open(obj.map);\n}\n\nexport async function handleMarkerDragend(marker) {\n  const position = marker.position;\n  let info = `<p>Pin dropped at: ${position.lat}, ${position.lng}</p>`;\n  let encodedPolyline = null;\n  redrawMarkerWindow(marker, '<div class=\"loader\"></div>');\n  try {\n    const originCoordinate = await getCurrentLocation();\n    const data = await getRoutes(originCoordinate, position);\n    if (!data.routes || data.routes.length === 0) {\n      info += '<b>No routes found</b>';\n      redrawMarkerWindow(marker, info);\n    } else {\n      const route = data.routes[0];\n      const routeDistance =\n        route.distanceMeters > 1000\n          ? route.distanceMeters / 1000\n          : route.distanceMeters;\n      const { days, hours, minutes } = convertS(\n        Number.parseInt(route.duration)\n      );\n      encodedPolyline = route.polyline?.encodedPolyline || null;\n      info += `<p>Approximate route length: ${routeDistance} ${\n        routeDistance > 1000 ? 'km' : 'm'\n      }</p>\n  \t\t\t<p>Approximate route time: ${days} d., ${hours} h., ${minutes} min. </p>`;\n      if (encodedPolyline) {\n        info += `<button id=\"btn-draw-route\" type=\"button\">Draw route</button>`;\n      } else {\n        info += '<b>No route polyline found</b>';\n      }\n    }\n    redrawMarkerWindow(marker, info);\n    google.maps.event.addListenerOnce(obj.infoWindow, 'domready', () => {\n      const btn = document.getElementById('btn-draw-route');\n      if (btn) {\n        btn.addEventListener('click', () => {\n          if (encodedPolyline) {\n            drawRoute(encodedPolyline);\n          } else {\n            console.error('Cannot draw route: No encoded polyline available.');\n          }\n        });\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching route:', error);\n    info += '<b>Error retrieving route data</b>';\n    await getMyGeolocation();\n    redrawMarkerWindow(marker, info);\n  }\n}\n\nexport async function handleClickOnMap(event, userMarkers) {\n  const position = event.latLng;\n  initMarker(position, true, 'New User Marker');\n  userMarkers.push(position);\n  saveToLS('user-markers', userMarkers);\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20height='24px'%20viewBox='0%20-960%20960%20960'%20width='24px'%20fill='%23e3e3e3'%3e%3cpath%20d='M360-80v-529q-91-24-145.5-100.5T160-880h80q0%2083%2053.5%20141.5T430-680h100q30%200%2056%2011t47%2032l181%20181-56%2056-158-158v478h-80v-240h-80v240h-80Zm120-640q-33%200-56.5-23.5T400-800q0-33%2023.5-56.5T480-880q33%200%2056.5%2023.5T560-800q0%2033-23.5%2056.5T480-720Z'/%3e%3c/svg%3e\"","import { refs } from './refs';\nimport { getRandomArbitrary } from './utils';\nimport { handleClickOnMap, handleLocationError } from './handlers';\nimport { initMarker, initSavedMarkers, userMarkers } from './marker';\nimport peopleIcon from '../img/emoji-people.svg';\n\nimport { obj } from '../main';\n\nlet isMapInitialized = false;\n\nexport async function initMap(position = { lat: -25.344, lng: 131.031 }) {\n  if (isMapInitialized) return obj; // Avoid reinitialization\n  isMapInitialized = true;\n\n  const { Map, InfoWindow } = await google.maps.importLibrary('maps');\n  const map = await new Map(refs.mapArea, {\n    zoom: 5,\n    center: position,\n    mapId: 'DEMO_MAP_ID',\n  });\n  const marker = await initMarker(position, true, 'Your location', peopleIcon);\n\n  const infoWindow = new InfoWindow();\n\n  initSavedMarkers();\n\n  map.addListener('click', event => {\n    handleClickOnMap(event, userMarkers);\n  });\n\n  console.log('Init Map');\n\n  return { map, marker, infoWindow };\n}\n\nexport async function getMyGeolocation() {\n  try {\n    const pos = await getCurrentLocation();\n\n    obj.infoWindow.setPosition(pos);\n    obj.infoWindow.setContent('Your current location');\n    obj.infoWindow.open(map);\n\n    obj.map.setCenter(pos);\n  } catch (error) {\n    handleLocationError(true, obj.infoWindow, map.getCenter());\n  }\n}\n\nexport async function getCurrentLocation() {\n  return new Promise((res, rej) => {\n    if (!navigator.geolocation) {\n      reject(new Error('Geolocation is not supported by this browser.'));\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(\n      position =>\n        res({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        }),\n      e => rej(e),\n      {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n      }\n    );\n  });\n}\n\nexport function getRandomPlace() {\n  return {\n    lat: Number(getRandomArbitrary(-64.05, 85.05)),\n    lng: Number(getRandomArbitrary(-180, 180)),\n  };\n}\n"],"names":["config","g","h","a","k","p","c","l","q","m","b","d","r","e","u","f","n","t","refs","convertS","s","days","hours","minutes","seconds","getRandomArbitrary","min","max","dataToJSON","data","jsonToData","jsonData","error","saveToLS","key","getDataFromLS","leftColumn","isResizing","event","onMouseMove","onMouseUp","newLeftWidth","obj","isAppInitialized","initApp","map","marker","infoWindow","initMap","getCurrentLocation","handleClickRandomBtn","handleClickFindMeBtn","userMarkers","initMarker","position","draggable","title","markerImage","AdvancedMarkerElement","PinElement","glyphSvgPinElement","glyphImg","handleMarkerDragend","markerUpdate","redrawMarkerWindow","markup","initSavedMarkers","savedMarkers","markerData","getRoutes","origin","destination","url","requestData","headers","axios","drawRoute","encodedPolyline","path","newPosition","getRandomPlace","getMyGeolocation","handleLocationError","browserHasGeolocation","pos","info","originCoordinate","route","routeDistance","btn","handleClickOnMap","peopleIcon","isMapInitialized","Map","InfoWindow","res","rej"],"mappings":"svBAAO,MAAMA,EAAS,CACpB,WAAY,MACd,GCACC,GAAK,CACJ,IAAIC,EACFC,EACAC,EACAC,EAAI,iCACJC,EAAI,SACJC,EAAI,gBACJC,EAAI,SACJC,EAAI,SACJC,EAAI,OACNA,EAAIA,EAAEJ,CAAC,IAAMI,EAAEJ,CAAC,EAAI,CAAA,GACpB,IAAIK,EAAID,EAAE,OAASA,EAAE,KAAO,CAAA,GAC1BE,EAAI,IAAI,IACRC,EAAI,IAAI,gBACRC,EAAI,IACFZ,IACCA,EAAI,IAAI,QAAQ,MAAOa,EAAGC,IAAM,CAC/B,MAAOb,EAAIM,EAAE,cAAc,QAAQ,GACnCI,EAAE,IAAI,YAAa,CAAC,GAAGD,CAAC,EAAI,EAAE,EAC9B,IAAKR,KAAKH,EACRY,EAAE,IACAT,EAAE,QAAQ,SAAUa,GAAK,IAAMA,EAAE,CAAC,EAAE,aAAa,EACjDhB,EAAEG,CAAC,CACf,EACQS,EAAE,IAAI,WAAYP,EAAI,SAAWE,CAAC,EAClCL,EAAE,IAAM,gBAAgBG,CAAC,wBAA0BO,EACnDF,EAAEH,CAAC,EAAIO,EACPZ,EAAE,QAAU,IAAOD,EAAIc,EAAE,MAAMX,EAAI,kBAAkB,CAAC,EACtDF,EAAE,MAAQM,EAAE,cAAc,eAAe,GAAG,OAAS,GACrDA,EAAE,KAAK,OAAON,CAAC,CAChB,CAAA,GACLQ,EAAEJ,CAAC,EACC,QAAQ,KAAKF,EAAI,8BAA+BJ,CAAC,EAChDU,EAAEJ,CAAC,EAAI,CAACQ,KAAMC,IAAMJ,EAAE,IAAIG,CAAC,GAAKD,EAAC,EAAG,KAAK,IAAMH,EAAEJ,CAAC,EAAEQ,EAAG,GAAGC,CAAC,CAAC,CACnE,GAAG,CACD,IAAKhB,EAAO,WACZ,EAAG,QACL,CAAC,ECvCM,MAAMkB,EAAO,CAClB,QAAS,SAAS,eAAe,KAAK,EACtC,QAAS,SAAS,cAAc,UAAU,EAC1C,UAAW,SAAS,eAAe,kBAAkB,EACrD,UAAW,SAAS,eAAe,mBAAmB,EACtD,aAAc,SAAS,eAAe,gBAAgB,CACxD,ECNO,SAASC,EAASC,EAAG,CAK1B,MAAMC,EAAO,KAAK,MAAMD,EAAI,KAAG,EACzBE,EAAQ,KAAK,MAAOF,EAAI,MAAO,IAAI,EACnCG,EAAU,KAAK,MAAOH,EAAI,KAAQ,EAAM,EACxCI,EAAUJ,EAAI,GAEpB,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEO,SAASC,EAAmBC,EAAKC,EAAK,CAC3C,OAAO,KAAK,OAAQ,GAAIA,EAAMD,GAAOA,CACvC,CAEO,SAASE,EAAWC,EAAM,CAC/B,OAAO,KAAK,UAAUA,CAAI,CAC5B,CAEO,SAASC,EAAWC,EAAU,CACnC,GAAI,CACF,OAAO,KAAK,MAAMA,CAAQ,CAC3B,OAAQC,EAAO,CACd,QAAQ,IAAI,gBAAiBA,CAAK,CACnC,CACH,CCzBO,SAASC,EAASC,EAAKL,EAAM,CAClC,aAAa,QAAQK,EAAKN,EAAWC,CAAI,CAAC,CAC5C,CAMO,SAASM,EAAcD,EAAK,CACjC,OAAOJ,EAAW,aAAa,QAAQI,CAAG,CAAC,CAC7C,CCTA,MAAME,EAAalB,EAAK,QAAQ,uBAEhC,IAAImB,EAAa,GAEjBnB,EAAK,QAAQ,iBAAiB,YAAaoB,GAAS,CAClDD,EAAa,GACb,SAAS,iBAAiB,YAAaE,CAAW,EAClD,SAAS,iBAAiB,UAAWC,CAAS,CAChD,CAAC,EAED,SAASD,EAAYD,EAAO,CAC1B,GAAI,CAACD,EAAY,OAEjB,IAAII,EAAeH,EAAM,QAAUF,EAAW,sBAAuB,EAAC,KACtEA,EAAW,MAAM,MAAQ,GAAGK,CAAY,IAC1C,CAEA,SAASD,GAAY,CACnBH,EAAa,GACb,SAAS,oBAAoB,YAAaE,CAAW,EACrD,SAAS,oBAAoB,UAAWC,CAAS,CACnD,CCZO,IAAIE,EAAM,CAAA,EAEbC,EAAmB,GAEvB,eAAeC,GAAU,CACvB,GAAID,EAAkB,OACtBA,EAAmB,GAEnB,QAAQ,MAAM,UAAU,EACxB,KAAM,CAAE,IAAAE,EAAK,OAAAC,EAAQ,WAAAC,CAAU,EAAK,MAAMC,EAAQ,MAAMC,EAAkB,CAAE,EAC5EP,EAAM,CAAE,IAAAG,EAAK,OAAAC,EAAQ,WAAAC,CAAU,EAI/B7B,EAAK,UAAU,iBAAiB,QAASgC,CAAoB,EAE7DhC,EAAK,UAAU,iBAAiB,QAASiC,CAAoB,CAS/D,CAEAP,EAAS,EClCF,IAAIQ,EAAc,CAAA,EAElB,eAAeC,EACpBC,EACAC,EACAC,EACAC,EAAc,OACd,CACA,KAAM,CAAE,sBAAAC,EAAuB,WAAAC,CAAU,EAAK,MAAM,OAAO,KAAK,cAC9D,QACJ,EAEE,IAAIC,EACJ,GAAIH,EAAa,CACf,MAAMI,EAAW,SAAS,cAAc,KAAK,EAC7CA,EAAS,IAAMJ,EAEfG,EAAqB,IAAID,EAAW,CAClC,MAAOE,CACb,CAAK,CACF,CAED,MAAMf,EAAS,IAAIY,EAAsB,CACvC,IAAKhB,EAAI,IACT,SAAUY,EACV,aAAcC,EACd,aAAc,GACd,QAASK,GAAoB,QAC7B,MAAOJ,CACX,CAAG,EAED,OAAAV,EAAO,YAAY,YAAa,IAAM,CACpCJ,EAAI,WAAW,OACnB,CAAG,EAEDI,EAAO,YAAY,UAAW,IAAMgB,EAAoBhB,CAAM,CAAC,EAE/DA,EAAO,YAAY,YAAa,IAAMgB,EAAoBhB,CAAM,CAAC,EAEjE,QAAQ,IAAI,aAAa,EAElBA,CACT,CAEO,SAASiB,EAAajB,EAAQQ,EAAU,CAC7CR,EAAO,SAAWQ,CACpB,CAEO,SAASU,EAAmBlB,EAAQmB,EAAQ,CACjDvB,EAAI,WAAW,QACfA,EAAI,WAAW,WAAWuB,CAAM,EAChCvB,EAAI,WAAW,KAAKI,EAAO,IAAKA,CAAM,CACxC,CAEO,SAASoB,GAAmB,CACjC,MAAMC,EAAehC,EAAc,cAAc,EAC7C,CAACgC,GAAgBA,EAAa,SAAW,IAE7Cf,EAAce,EACdf,EAAY,QAAQgB,GAAc,CAChCf,EAAWe,EAAY,GAAO,mBAAmB,CACrD,CAAG,EACD,QAAQ,IAAI,mBAAmB,EACjC,CChEO,eAAeC,EAAUC,EAAQC,EAAa,CACnD,MAAMC,EAAM,4DAENC,EAAc,CAClB,OAAQ,CACN,SAAU,CACR,OAAQ,CACN,SAAUH,EAAO,IACjB,UAAWA,EAAO,GACnB,CACF,CACF,EACD,YAAa,CACX,SAAU,CACR,OAAQ,CACN,SAAUC,EAAY,IACtB,UAAWA,EAAY,GACxB,CACF,CACF,EACD,WAAY,OAEZ,yBAA0B,GAC1B,eAAgB,CACd,WAAY,GACZ,cAAe,GACf,aAAc,EACf,EACD,aAAc,QACd,MAAO,UACX,EAEQG,EAAU,CACd,QAAS,CACP,eAAgB,mBAChB,iBAAkB1E,EAAO,WACzB,mBACE,uEACH,CACL,EAEE,GAAI,CAEF,OADiB,MAAM2E,EAAM,KAAKH,EAAKC,EAAaC,CAAO,GAC3C,IACjB,OAAQ1C,EAAO,CACd,cAAQ,MACN,8BACAA,EAAM,UAAU,MAAQA,EAAM,OACpC,EACUA,CACP,CACH,CAEO,eAAe4C,EAAUC,EAAiB,CAC1B,MAAM,OAAO,KAAK,cAAc,UAAU,EAE/D,MAAMC,EAAO,OAAO,KAAK,SAAS,SAAS,WAAWD,CAAe,EAEnD,IAAI,OAAO,KAAK,SAAS,CACzC,KAAMC,EACN,SAAU,GACV,YAAa,UACb,cAAe,EACf,aAAc,CAClB,CAAG,EAES,OAAOpC,EAAI,GAAG,CAC1B,CC/DO,SAASQ,GAAuB,CACrC,MAAM6B,EAAcC,IACpBtC,EAAI,IAAI,UAAUqC,CAAW,EAE7BhB,EAAarB,EAAI,OAAQqC,CAAW,CACtC,CAEO,eAAe5B,GAAuB,CAC3C,MAAM8B,EAAgB,EACtBvC,EAAI,IAAI,QAAQ,EAAE,CACpB,CAEO,SAASwC,EAAoBC,EAAuBC,EAAK,CAC9D1C,EAAI,WAAW,YAAY0C,CAAG,EAC9B1C,EAAI,WAAW,WAET,wCAER,EACEA,EAAI,WAAW,KAAKA,EAAI,GAAG,CAC7B,CAEO,eAAeoB,EAAoBhB,EAAQ,CAChD,MAAMQ,EAAWR,EAAO,SACxB,IAAIuC,EAAO,sBAAsB/B,EAAS,GAAG,KAAKA,EAAS,GAAG,OAC1DuB,EAAkB,KACtBb,EAAmBlB,EAAQ,4BAA4B,EACvD,GAAI,CACF,MAAMwC,EAAmB,MAAMrC,IACzBpB,EAAO,MAAMwC,EAAUiB,EAAkBhC,CAAQ,EACvD,GAAI,CAACzB,EAAK,QAAUA,EAAK,OAAO,SAAW,EACzCwD,GAAQ,yBACRrB,EAAmBlB,EAAQuC,CAAI,MAC1B,CACL,MAAME,EAAQ1D,EAAK,OAAO,CAAC,EACrB2D,EACJD,EAAM,eAAiB,IACnBA,EAAM,eAAiB,IACvBA,EAAM,eACN,CAAE,KAAAlE,EAAM,MAAAC,EAAO,QAAAC,CAAS,EAAGJ,EAC/B,OAAO,SAASoE,EAAM,QAAQ,CACtC,EACMV,EAAkBU,EAAM,UAAU,iBAAmB,KACrDF,GAAQ,gCAAgCG,CAAa,IACnDA,EAAgB,IAAO,KAAO,GAC/B;AAAA,kCAC2BnE,CAAI,QAAQC,CAAK,QAAQC,CAAO,aACxDsD,EACFQ,GAAQ,gEAERA,GAAQ,gCAEX,CACDrB,EAAmBlB,EAAQuC,CAAI,EAC/B,OAAO,KAAK,MAAM,gBAAgB3C,EAAI,WAAY,WAAY,IAAM,CAClE,MAAM+C,EAAM,SAAS,eAAe,gBAAgB,EAChDA,GACFA,EAAI,iBAAiB,QAAS,IAAM,CAC9BZ,EACFD,EAAUC,CAAe,EAEzB,QAAQ,MAAM,mDAAmD,CAE7E,CAAS,CAET,CAAK,CACF,OAAQ7C,EAAO,CACd,QAAQ,MAAM,wBAAyBA,CAAK,EAC5CqD,GAAQ,qCACR,MAAMJ,EAAgB,EACtBjB,EAAmBlB,EAAQuC,CAAI,CAChC,CACH,CAEO,eAAeK,EAAiBpD,EAAOc,EAAa,CACzD,MAAME,EAAWhB,EAAM,OACvBe,EAAWC,EAAU,GAAM,iBAAiB,EAC5CF,EAAY,KAAKE,CAAQ,EACzBrB,EAAS,eAAgBmB,CAAW,CACtC,CCvFA,MAAeuC,EAAA,gcCQf,IAAIC,EAAmB,GAEhB,eAAe5C,EAAQM,EAAW,CAAE,IAAK,QAAS,IAAK,SAAW,CACvE,GAAIsC,EAAkB,OAAOlD,EAC7BkD,EAAmB,GAEnB,KAAM,CAAE,IAAAC,EAAK,WAAAC,GAAe,MAAM,OAAO,KAAK,cAAc,MAAM,EAC5DjD,EAAM,MAAM,IAAIgD,EAAI3E,EAAK,QAAS,CACtC,KAAM,EACN,OAAQoC,EACR,MAAO,aACX,CAAG,EACKR,EAAS,MAAMO,EAAWC,EAAU,GAAM,gBAAiBqC,CAAU,EAErE5C,EAAa,IAAI+C,EAEvB,OAAA5B,IAEArB,EAAI,YAAY,QAASP,GAAS,CAChCoD,EAAiBpD,EAAOc,CAAW,CACvC,CAAG,EAED,QAAQ,IAAI,UAAU,EAEf,CAAE,IAAAP,EAAK,OAAAC,EAAQ,WAAAC,EACxB,CAEO,eAAekC,GAAmB,CACvC,GAAI,CACF,MAAMG,EAAM,MAAMnC,IAElBP,EAAI,WAAW,YAAY0C,CAAG,EAC9B1C,EAAI,WAAW,WAAW,uBAAuB,EACjDA,EAAI,WAAW,KAAK,GAAG,EAEvBA,EAAI,IAAI,UAAU0C,CAAG,CACtB,MAAe,CACdF,EAAoB,GAAMxC,EAAI,WAAY,IAAI,UAAS,CAAE,CAC1D,CACH,CAEO,eAAeO,GAAqB,CACzC,OAAO,IAAI,QAAQ,CAAC8C,EAAKC,IAAQ,CAC/B,GAAI,CAAC,UAAU,YAAa,CAC1B,OAAO,IAAI,MAAM,+CAA+C,CAAC,EACjE,MACD,CACD,UAAU,YAAY,mBACpB1C,GACEyC,EAAI,CACF,IAAKzC,EAAS,OAAO,SACrB,IAAKA,EAAS,OAAO,SAC/B,CAAS,EACHzC,GAAKmF,EAAInF,CAAC,EACV,CACE,mBAAoB,GACpB,QAAS,IACT,WAAY,CACb,CACP,CACA,CAAG,CACH,CAEO,SAASmE,GAAiB,CAC/B,MAAO,CACL,IAAK,OAAOvD,EAAmB,OAAQ,KAAK,CAAC,EAC7C,IAAK,OAAOA,EAAmB,KAAM,GAAG,CAAC,CAC7C,CACA"}